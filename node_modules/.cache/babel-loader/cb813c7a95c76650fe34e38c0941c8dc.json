{"ast":null,"code":"'use strict';\n\nconst path = require('path');\n\nconst Module = require('module');\n\nconst resolveFrom = (fromDir, moduleId, silent) => {\n  if (typeof fromDir !== 'string') {\n    throw new TypeError(\"Expected `fromDir` to be of type `string`, got `\".concat(typeof fromDir, \"`\"));\n  }\n\n  if (typeof moduleId !== 'string') {\n    throw new TypeError(\"Expected `moduleId` to be of type `string`, got `\".concat(typeof moduleId, \"`\"));\n  }\n\n  fromDir = path.resolve(fromDir);\n  const fromFile = path.join(fromDir, 'noop.js');\n\n  const resolveFileName = () => Module._resolveFilename(moduleId, {\n    id: fromFile,\n    filename: fromFile,\n    paths: Module._nodeModulePaths(fromDir)\n  });\n\n  if (silent) {\n    try {\n      return resolveFileName();\n    } catch (err) {\n      return null;\n    }\n  }\n\n  return resolveFileName();\n};\n\nmodule.exports = (fromDir, moduleId) => resolveFrom(fromDir, moduleId);\n\nmodule.exports.silent = (fromDir, moduleId) => resolveFrom(fromDir, moduleId, true);","map":null,"metadata":{},"sourceType":"script"}