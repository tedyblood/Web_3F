{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _babelPluginAddJsxAttribute = _interopRequireDefault(require(\"@svgr/babel-plugin-add-jsx-attribute\"));\n\nvar _babelPluginRemoveJsxAttribute = _interopRequireDefault(require(\"@svgr/babel-plugin-remove-jsx-attribute\"));\n\nvar _babelPluginRemoveJsxEmptyExpression = _interopRequireDefault(require(\"@svgr/babel-plugin-remove-jsx-empty-expression\"));\n\nvar _babelPluginReplaceJsxAttributeValue = _interopRequireDefault(require(\"@svgr/babel-plugin-replace-jsx-attribute-value\"));\n\nvar _babelPluginSvgDynamicTitle = _interopRequireDefault(require(\"@svgr/babel-plugin-svg-dynamic-title\"));\n\nvar _babelPluginSvgEmDimensions = _interopRequireDefault(require(\"@svgr/babel-plugin-svg-em-dimensions\"));\n\nvar _babelPluginTransformReactNativeSvg = _interopRequireDefault(require(\"@svgr/babel-plugin-transform-react-native-svg\"));\n\nvar _babelPluginTransformSvgComponent = _interopRequireDefault(require(\"@svgr/babel-plugin-transform-svg-component\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction getAttributeValue(value) {\n  const literal = typeof value === 'string' && value.startsWith('{') && value.endsWith('}');\n  return {\n    value: literal ? value.slice(1, -1) : value,\n    literal\n  };\n}\n\nfunction propsToAttributes(props) {\n  return Object.keys(props).map(name => {\n    const _getAttributeValue = getAttributeValue(props[name]),\n          literal = _getAttributeValue.literal,\n          value = _getAttributeValue.value;\n\n    return {\n      name,\n      literal,\n      value\n    };\n  });\n}\n\nfunction replaceMapToValues(replaceMap) {\n  return Object.keys(replaceMap).map(value => {\n    const _getAttributeValue2 = getAttributeValue(replaceMap[value]),\n          literal = _getAttributeValue2.literal,\n          newValue = _getAttributeValue2.value;\n\n    return {\n      value,\n      newValue,\n      literal\n    };\n  });\n}\n\nconst plugin = (api, opts) => {\n  let toRemoveAttributes = ['xmlns', 'xmlnsXlink', 'version'];\n  let toAddAttributes = [];\n\n  if (opts.svgProps) {\n    toAddAttributes = [...toAddAttributes, ...propsToAttributes(opts.svgProps)];\n  }\n\n  if (opts.ref) {\n    toAddAttributes = [...toAddAttributes, {\n      name: 'ref',\n      value: 'svgRef',\n      literal: true\n    }];\n  }\n\n  if (opts.expandProps) {\n    toAddAttributes = [...toAddAttributes, {\n      name: 'props',\n      spread: true,\n      position: opts.expandProps\n    }];\n  }\n\n  if (!opts.dimensions) {\n    toRemoveAttributes = [...toRemoveAttributes, 'width', 'height'];\n  }\n\n  const plugins = [[_babelPluginTransformSvgComponent.default, opts], ...(opts.icon && opts.dimensions ? [_babelPluginSvgEmDimensions.default] : []), [_babelPluginRemoveJsxAttribute.default, {\n    elements: ['svg', 'Svg'],\n    attributes: toRemoveAttributes\n  }], [_babelPluginAddJsxAttribute.default, {\n    elements: ['svg', 'Svg'],\n    attributes: toAddAttributes\n  }], _babelPluginRemoveJsxEmptyExpression.default];\n\n  if (opts.replaceAttrValues) {\n    plugins.push([_babelPluginReplaceJsxAttributeValue.default, {\n      values: replaceMapToValues(opts.replaceAttrValues)\n    }]);\n  }\n\n  if (opts.titleProp) {\n    plugins.push(_babelPluginSvgDynamicTitle.default);\n  }\n\n  if (opts.native) {\n    if (opts.native.expo) {\n      plugins.push([_babelPluginTransformReactNativeSvg.default, opts.native]);\n    } else {\n      plugins.push(_babelPluginTransformReactNativeSvg.default);\n    }\n  }\n\n  return {\n    plugins\n  };\n};\n\nvar _default = plugin;\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}