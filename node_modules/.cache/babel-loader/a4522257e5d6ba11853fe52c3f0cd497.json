{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.getExport = exports.getImport = exports.getProps = void 0;\n\nconst getProps = ({\n  types: t\n}, opts) => {\n  const props = [];\n\n  if (opts.ref) {\n    props.push(t.objectProperty(t.identifier('svgRef'), t.identifier('svgRef'), false, true));\n  }\n\n  if (opts.titleProp) {\n    props.push(t.objectProperty(t.identifier('title'), t.identifier('title'), false, true));\n  }\n\n  if (opts.expandProps) {\n    props.push(t.restElement(t.identifier('props')));\n  }\n\n  if (props.length === 0) {\n    return null;\n  }\n\n  if (props.length === 1 && opts.expandProps) {\n    return t.identifier('props');\n  }\n\n  return t.objectPattern(props);\n};\n\nexports.getProps = getProps;\n\nconst getImport = ({\n  types: t\n}, opts) => {\n  const importDeclarations = [t.importDeclaration([t.importDefaultSpecifier(t.identifier('React'))], t.stringLiteral('react'))];\n\n  if (opts.native) {\n    if (opts.native.expo) {\n      importDeclarations.push(t.importDeclaration([], t.stringLiteral('expo')));\n    } else {\n      importDeclarations.push(t.importDeclaration([t.importDefaultSpecifier(t.identifier('Svg'))], t.stringLiteral('react-native-svg')));\n    }\n  }\n\n  return importDeclarations;\n};\n\nexports.getImport = getImport;\n\nconst getExport = ({\n  template\n}, opts) => {\n  let result = '';\n  let exportName = opts.state.componentName;\n\n  if (opts.ref) {\n    exportName = 'ForwardRef';\n    result += \"const ForwardRef = React.forwardRef((props, ref) => <\".concat(opts.state.componentName, \" svgRef={ref} {...props} />)\\n\\n\");\n  }\n\n  if (opts.state.caller && opts.state.caller.previousExport) {\n    result += \"\".concat(opts.state.caller.previousExport, \"\\n\");\n    result += \"export { \".concat(exportName, \" as ReactComponent }\");\n    return template.ast(result, {\n      plugins: ['jsx']\n    });\n  }\n\n  result += \"export default \".concat(exportName);\n  return template.ast(result, {\n    plugins: ['jsx']\n  });\n};\n\nexports.getExport = getExport;","map":null,"metadata":{},"sourceType":"script"}