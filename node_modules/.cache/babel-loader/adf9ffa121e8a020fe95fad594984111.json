{"ast":null,"code":"\"use strict\";\n\nvar _toArray = require(\"E:\\\\Proyecto Social Media\\\\Clientes Datos\\\\3F\\\\WEB3F\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/toArray\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nvar _util = require(\"./util\");\n\nvar _stringToObjectStyle = _interopRequireDefault(require(\"./stringToObjectStyle\"));\n\nvar _mappings = require(\"./mappings\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction convertAriaAttribute(kebabKey) {\n  const _kebabKey$split = kebabKey.split('-'),\n        _kebabKey$split2 = _toArray(_kebabKey$split),\n        aria = _kebabKey$split2[0],\n        parts = _kebabKey$split2.slice(1);\n\n  return \"\".concat(aria, \"-\").concat(parts.join('').toLowerCase());\n}\n\nfunction getKey(key, value, node) {\n  const lowerCaseKey = key.toLowerCase();\n  const mappedElementAttribute = _mappings.ELEMENT_ATTRIBUTE_MAPPING[node.name] && _mappings.ELEMENT_ATTRIBUTE_MAPPING[node.name][lowerCaseKey];\n  const mappedAttribute = _mappings.ATTRIBUTE_MAPPING[lowerCaseKey];\n\n  if (mappedElementAttribute || mappedAttribute) {\n    return t.jsxIdentifier(mappedElementAttribute || mappedAttribute);\n  }\n\n  const kebabKey = (0, _util.kebabCase)(key);\n\n  if (kebabKey.startsWith('aria-')) {\n    return t.jsxIdentifier(convertAriaAttribute(kebabKey));\n  }\n\n  if (kebabKey.startsWith('data-')) {\n    return t.jsxIdentifier(kebabKey);\n  }\n\n  return t.jsxIdentifier(key);\n}\n\nfunction getValue(key, value) {\n  // Handle className\n  if (Array.isArray(value)) {\n    return t.stringLiteral((0, _util.replaceSpaces)(value.join(' ')));\n  }\n\n  if (key === 'style') {\n    return t.jsxExpressionContainer((0, _stringToObjectStyle.default)(value));\n  }\n\n  if ((0, _util.isNumeric)(value)) {\n    return t.jsxExpressionContainer(t.numericLiteral(Number(value)));\n  }\n\n  return t.stringLiteral((0, _util.replaceSpaces)(value));\n}\n\nconst getAttributes = node => {\n  const keys = Object.keys(node.properties);\n  const attributes = [];\n  let index = -1;\n\n  while (++index < keys.length) {\n    const key = keys[index];\n    const value = node.properties[key];\n    const attribute = t.jsxAttribute(getKey(key, value, node), getValue(key, value, node));\n    attributes.push(attribute);\n  }\n\n  return attributes;\n};\n\nvar _default = getAttributes;\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}