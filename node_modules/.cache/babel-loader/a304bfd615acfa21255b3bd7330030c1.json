{"ast":null,"code":"'use strict';\n\nconst path = require('path');\n\nconst resolveFrom = require('resolve-from');\n\nconst callerPath = require('caller-path');\n\nmodule.exports = moduleId => {\n  if (typeof moduleId !== 'string') {\n    throw new TypeError('Expected a string');\n  }\n\n  const filePath = resolveFrom(path.dirname(callerPath()), moduleId); // Delete itself from module parent\n\n  if (require.cache[filePath] && require.cache[filePath].parent) {\n    let i = require.cache[filePath].parent.children.length;\n\n    while (i--) {\n      if (require.cache[filePath].parent.children[i].id === filePath) {\n        require.cache[filePath].parent.children.splice(i, 1);\n      }\n    }\n  } // Delete module from cache\n\n\n  delete require.cache[filePath]; // Return fresh module\n\n  return require(filePath);\n};","map":null,"metadata":{},"sourceType":"script"}