{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.default = jsxPlugin;\n\nvar _unified = _interopRequireDefault(require(\"unified\"));\n\nvar _rehypeParse = _interopRequireDefault(require(\"rehype-parse\"));\n\nvar _vfile = _interopRequireDefault(require(\"vfile\"));\n\nvar _hastUtilToBabelAst = _interopRequireDefault(require(\"@svgr/hast-util-to-babel-ast\"));\n\nvar _core = require(\"@babel/core\");\n\nvar _babelPreset = _interopRequireDefault(require(\"@svgr/babel-preset\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction jsxPlugin(code, config, state) {\n  const filePath = state.filePath || 'unknown';\n  const hastTree = (0, _unified.default)().use(_rehypeParse.default, {\n    fragment: true,\n    space: 'svg',\n    emitParseErrors: true,\n    duplicateAttribute: false\n  }).parse((0, _vfile.default)({\n    path: filePath,\n    contents: code\n  }));\n  const babelTree = (0, _hastUtilToBabelAst.default)(hastTree);\n\n  const _ref = (0, _core.transformFromAstSync)(babelTree, code, _extends({\n    caller: {\n      name: 'svgr'\n    },\n    presets: [(0, _core.createConfigItem)([_babelPreset.default, _extends({}, config, {\n      state\n    })], {\n      type: 'preset'\n    })],\n    filename: filePath,\n    babelrc: false,\n    configFile: false,\n    code: true,\n    ast: false,\n    inputSourceMap: false\n  }, config.jsx && config.jsx.babelConfig)),\n        generatedCode = _ref.code;\n\n  return generatedCode;\n}","map":null,"metadata":{},"sourceType":"script"}